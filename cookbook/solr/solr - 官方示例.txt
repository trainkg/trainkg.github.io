https://lucene.apache.org/solr/guide/8_7/installing-solr.html
========================================================================================================================

# solr 启动, 默认启用两个solr服务
------------------------------------------------------------------------------------------------------------------------
	./bin/solr start -e cloud

# 为两个服务分别分配对应的监听端口
------------------------------------------------------------------------------------------------------------------------
	 Please enter the port for node1 [8983]:
	 Please enter the port for node2 [7574]:
 
# 创建索引集合，只设定了一个名称，不可重复
------------------------------------------------------------------------------------------------------------------------
	输入 techproducts, 后续有测试数据，需要使用这个名称	

# 索引分片， 涉及到索引的分布位置，落在那个节点上， 默认2，平均分布
 
# 故障转移
------------------------------------------------------------------------------------------------------------------------
	输入 sample_techproducts_configs (专门用于测试用例的配置)
  
# 关闭命令
------------------------------------------------------------------------------------------------------------------------
	./solr stop -all

# 建立示例数据索引
------------------------------------------------------------------------------------------------------------------------
	bin/post -c techproducts example/exampledocs/*
 
# 创建全新的集合films
------------------------------------------------------------------------------------------------------------------------
	 bin/solr create -c films -s 2 -rf 2
	 以上命令是将集合划分为（2）的分片数量和要创建的副本数量（2）
 
# 创建字段约束
------------------------------------------------------------------------------------------------------------------------
	> 访问对应的URL，定义一个字段类型 （需要安装CURL sudo apt-get install curl）
	curl -X POST -H 'Content-type:application/json' --data-binary '{"add-field": {"name":"name", "type":"text_general", "multiValued":false, "stored":true}}' http://localhost:8983/solr/films/schema
	此命令使用Schema API显式定义一个名为“ name”的字段，其字段类型为“ text_general”（文本字段）。不允许有多个值，但是会存储它（意味着可以通过查询检索它）。

	> 可以使用SOLR管理工具页面管理
	  schema 章节add-field
  
# Create a "catchall" Copy Field
------------------------------------------------------------------------------------------------------------------------
	URL: curl -X POST -H 'Content-type:application/json' --data-binary '{"add-copy-field" : {"source":"*","dest":"_text_"}}' http://localhost:8983/solr/films/schema
	管理页面：schema > Add Copy Field

# 设定数据类型+索引建立方式后进行导入数据（类似数据库建表导入数据）
------------------------------------------------------------------------------------------------------------------------
	> jaon 数据
	bin/post -c films example/films/films.json
	> xml 数据
	bin/post -c films example/films/films.xml
	> csv 数据
	bin/post -c films example/films/films.csv -params "f.genre.split=true&f.directed_by.split=true&f.genre.separator=|&f.directed_by.separator=|"
	params csv 分割一些的特殊设定, '|' 单域内数据拆分为数组

#清理collection数据
------------------------------------------------------------------------------------------------------------------------
	bin/solr delete -c films

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	