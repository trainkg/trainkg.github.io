#########################################################################################
#########################################################################################
##### 基础配置项参考文件zoo_sample.cfg												 ####				
##### https://zookeeper.apache.org/doc/r3.5.8/zookeeperStarted.html#sc_Prerequisites ####
#########################################################################################
#########################################################################################

---------------------------------------------------------------------------------------------------------------------------------
	copy zoo_sample.cfg to zoo.cfg
	
	1. tickTime=2000
	   心跳检测时间周期
	   
	2. dataDir=/tmp/zookeeper 
	   数据存放目录
	   
	3. 创建myid文件
	
	   
节点配置	   
---------------------------------------------------------------------------------------------------------------------------------
	
	1. server.1:s1:28888:38888
		
		>  server.1 服务器名称， n 必须是myid，位于dataDir目录的myid文件中
		>  28888	leader 端口，leader 开放允许follower 连接的端口
		>  38888    leader 选举端口，作为leader时候，开发选举的端口
		
		
本地测试的伪分布模式 (Pseudo distribute )
---------------------------------------------------------------------------------------------------------------------------------
	启动
	bin/zkServer.sh start pseudo/zoo1.cfg
	
	状态查看
	bin/zkServer.sh status pseudo/zoo1.cfg
	
	
	分别启动1，2，3 节点
	

ZOOKEEPER 客户端
---------------------------------------------------------------------------------------------------------------------------------
	1. bin/zkCli.sh -server 127.0.0.1:2181 
	   > 2181 是zoo.cfg开放的端口
	   
	2. 查看支持的命令集合
	   > help 
	   
	3. 列出当前节点列表
		ls /
		
	4. 创建一个znode
	   create /zk_test my_data
	   创建zk_test节点，内容是my_data, 无论连接的是那个zookeeper实例，这个时候zookeeper集群中所有节点都将拥有这个数据
	   
	5. 查看信息
	   get -s -w /zk_test

	6. 更新信息
	   set /zk_test barley
	
	7. 删除节点
	   > delete /zk_test
	   > ls /
	
	
ZOOKEEPER关闭
---------------------------------------------------------------------------------------------------------------------------------
	1. TODO.
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	