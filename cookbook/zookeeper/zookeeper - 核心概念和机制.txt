=============================================================================================================
资源参考
https://zookeeper.apache.org/doc/r3.5.8/zookeeperProgrammers.html
=============================================================================================================

#. Zookeeper 数据模型
-------------------------------------------------------------------------------------------------------------
	1. 树状结构，存在命名空间
	   有一些特殊字符不可以做为名称使用， 空格， '..', 'zookeeper'
	   
	2. ZNODES (zookeeper 节点信息)
	   信息涵盖， 数据版本号(每次变更增加版本号)，权限信息，时间戳
	   
	3. WATCHES
	   运行客户端监听节点信息，可以获取zookeeper对于数据修改通知
	   
	4. DATA ACCESS
		> 节点数据操作是原子性的
		> 每个节点都可以单独控制权限（ACL）
	
	5. Ephemeral Nodes
		一种特殊的节点，生命周期和创建这个节点的session是一样长的，session中止，节点自动删除，然后这个类型的节点不允许有子节点
	
	6. Sequence Nodes
		对于父节点来说是有有序的节点
	
	7. Container Nodes
	   这种类型的节点，当子节点全部删除的时候，父节点也会自动删除
	
	8. TTL Nodes
	   在规定的时间内，没有子节点，会被自动删除
	
#. Zookeeper TIME (时间戳/统计字段)
-------------------------------------------------------------------------------------------------------------
	> zxid zookeeper 事务ID
	> Version numbers 数据版本号
	> ticks
	> real time 毫秒数
	
#. Zookeeper 节点状态信息
-------------------------------------------------------------------------------------------------------------
	> czxid 创建当前节点的事务id
	> mzxid 最后一次修改当前节点事务ID
	> pzxid 子节点最后一次修改事务ID
	> ctime 当前节点创建时间
	> mtime 当前节点最后修改时间
	> version 当前节点数据版本
	> cversion 子节点最新的数据版本
	> aversion  acl 版本信息
	> ephemeralOwner 如果这个是一个临时节点，关联的是拥有这个节点的session id,如果不是，为0
	> dataLength 当前节点数据长度
	> numChildren 子节点数量
	
#. Zookeeper 会话 session
-------------------------------------------------------------------------------------------------------------
	会话状态流转，具体查看对应的状态流转图
	1. start
	2. connecting (disconnected event)
	3. close （超时, 主动关闭）
	4. connected
	5. auth failed (权限认证失败)
	
	[zookeeper 的心跳机制]
	
	客户端连接zookeeper服务器之后会获取一个64bit number类型的sessioni id，客户端连接不同的服务的时候，需要通过这个sessionid进行沟通
	session 超时设定，最小2个心跳时间，最大20个心跳时间
	session 超时机制有zookeeper集权管理
	
	[集群节点节点变更]
	session 的重现建立机制
	

#. Zookeeper WATCH 
-------------------------------------------------------------------------------------------------------------	
	TODO ....
		
		
	   
	   
	   
	 
	